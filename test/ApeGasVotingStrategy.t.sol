// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;
/* solhint-disable */

import { Test } from "forge-std/Test.sol";
import { ApeGasVotingStrategy } from "../src/voting-strategies/ApeGasVotingStrategy.sol";
import { VotingTrieParameters, PackedTrieNode } from "../src/voting-strategies/ApeGasVotingStrategy.sol";

contract ApeGasVotingStrategyTest is Test {
    ApeGasVotingStrategy public apeGasVotingStrategy;
    PackedTrieNode[] public nodes;
    string public FORK_URL = "https://rpc.curtis.apechain.com"; // Test data would probably be taken from curtis
    uint256 public forkId;
    address public herodotusContract = 0xfda8190B613497c47695F54a512a092F1216fA47;
    address public delegateRegistry = 0xDd6B74123b2aB93aD701320D3F8D1b92B4fA5202;
    address public satellite = 0xc9854fd6034fbc41B65b454919a48a5a9b342fa8;

    function setUp() public {
        apeGasVotingStrategy = new ApeGasVotingStrategy();
        forkId = vm.createFork(FORK_URL); // Test data would probably be taken from curtis
        vm.selectFork(forkId); // Test data would probably be taken from curtis
    }

    function testGetVotingPower1() public {
        address voter = 0xc83A9e69012312513328992d454290be85e95101;
        uint256 delegatedVotingPower = 99997623558354293; // VP delegated to this address
        uint256 addressBalance = 407740832850340821;
        uint256 expectedVotingPower = delegatedVotingPower + addressBalance;

        uint32 l1BlockNumber = 8481571;
        uint256 l1ChainId = 11155111; // SEPOLIA
        uint256 l3ChainId = 33111; // CURTIS
        uint256 id = 0x0000000000000000000000000000000000000000000000000000000000004242;
        bytes memory params = abi.encode(l1ChainId, l3ChainId, herodotusContract, satellite, id, delegateRegistry);

        bytes
            memory accountProof = hex"f90bb3b90214f90211a0c3b44d6ccf0f19be162ac394070c7d32e19af715dee353598786d5e34c50f9f9a0d6c1e2976423643197db05be8c26e09cc8ee9366115d2d9d2a2e009e0dde7deaa074e4fc7b61951bd367ac9e04bd5f3443b59c7ce7f371a0ce7b06345d3281d766a0a7323c66d4ba26439b285e5048698ed9faa9d2b23402c09c8187a37ae57f3f55a051e262ed184cb2e5849c6fac73b9e6c8f0ff075cf4ab98e9d60005da0b55274aa073684c4312087b11b20a9bcdfe94c30e6ca72f762eb904abe993bd7e6d6cf964a078912ec73d2be05fd8e09343346374e7a1b5ca81c3b5e82ea30cc4e903396371a0d5ffe956cbbf000225e062fd7fabd3ee726189cd2b1505f9f444915c03d4db24a0ca7cfa039bd987a361a8237edcf217ab67e6bf06dfc096225611afe6b90e78b6a0004bb09ae52889ad93500e6421515d1b4c01cbaf6bdc19cca56a1d3f9a40eff2a0c35ec72c6fa624c799d8e5a18d013c2e7dbc5eabaae2869f7dd71d42849a5019a0933b172fd2c57c43c57dc404b0172b2660612d55554640ffba87693a7cbaa24da055100c1476b8d87379dc29066d19061a0d614b011d98b22f64a48581762a34d2a06b02e4747b48a4658da699aa531e91c6f443aac551aa768ea242c05bdc6c74afa0767497bb3c415b02c15949aa3f8992e494c2d1a2d895622afd0678ef035b56d0a0cf86009e69678c94bb798e694aa4ddaaf1fd0ed2d944c8a79f52bb316f2576dc80b90214f90211a09e15297f236a56824595201bec4436bec8b3263f5a3e72a0f4ab7f639b1eb4d9a0a12255c0bb6634a1309f0613af3673b43ba00fbe67a6b909e06b07c529027882a0ff3cab1665fd9086e0fbaac219b0e368d8e90ecc292087b01430ba4ea6ce5b6aa0ca3f3e59d8d872d4f6da734ee8d262a4f5b674d4e886bbd67da663f30503fd29a0ba2bcef6cbcd660430a8bc9a59eff49fb14d352e5210604136c8ffec9e3a00c6a03fd875f75fdf43366e196887c290751b907e122be530c91ad370bfceeed37ee9a0aca873b054e94332bf330536248dbb1ce93db6103f450280578d003133f46aa0a05913e8080351f3c0c34b81a49dfdd817842c8c6768794bb2fdd866797264d1a8a049163cb3f5bacbbf1a991bea80d0f4406e5be79f3e1b31f2313319eba740e9b5a022ffded19d6d55777616c7a3743cdd0b9062c1259631e542f914d53be68ad315a0e62e4fd204b5a7b0b5d18c6417b99090bb4677a9e3870818a8b3bc6083671854a0e7305d9d8443d92c410befe38d316acb97a0a81525b28cc278d7212b4116fc19a0315a39a3f22150bd8878794dee2824a222f130867728ec4a41bfa7ad0862573fa03b07a32170e3397ac9b4df6a6f8a519778b1d4c048eaac66c81fad7a2c4ad15ba063537d144ee5d3d60f4780c0d164b1c93c56d3ab1a6a4bcb3af6fb304e1c8022a0f7ebfbf14285731d218e86101c3f89e8d3fa52b05cd59a7c8bd6b5d3ea644b6e80b90214f90211a0634f48266c8b50c1a2036fe3d4dbbc0896116bb42b0ef4f8c6cfc18eacdb7d62a0320a92805ed96f87c1e60a32b2b053e2f9e4783c26529e1fc54871112af0007ea0c18c4d386329e2455ea2f5a85a6bd22f467dc7b8f744b7c185a56b434ceb9d81a05359f5cb105f4a00cd91657481530573e70430dda0677207af2b2aaa29323efda0bf4da456f74981d4ea74f9eef90834bc2a0dffe6985e62498de2c4c9fe79cbe3a0ec6cb3fc9c99d46877d2adc886eeb7304f65f0ec15b9e6009442c435ac8b513fa04b8ab880242fed2a05af7a7f5e1a59d0c508093871db05bc4d7ab4833c731d34a0ff42511689687330d99c53fb2f89774e6a2a29ad13cd6c52fa889261e188a88ca0e217dd010f5dfdc85fb5892956d338ddea619fa2bb555731b8ce36a3113fd572a02e28ca3ce44ef7c538af87e8a8648fb6584f4acd27e2202bbc1b9842a42fb705a0fd6e5d126247aff9d4e0059322f94d2cba347b4a47a1ff255fabbb48830c50a6a0efa809e4876e594d12fe9f00b162b7af58092494507d14fb77d4a3e0e37d308ca014ceae367f143503d4641d1b345afd2ccfec31c39cd809c39ee7a85ad00070c2a092f04bd1b6cb9561086cafa7d38393017530d53c55a18cf85d478d0e0be3152ba0d1ef8a6b2e5202910c0813cf9d124b638bf9810ba6514444bda7c8aad636113da0efcf36eef2c9334a93a5421267480b28337b7b6df6c257e0f565e575232e407080b90214f90211a04ea2f7dc4cb3b6e526275a2000b6047db8ead7358e513ec488b3143efcb8df75a004f5ee9ebc14a38a2864b1b56dbe17141a70e2b5546accd40156222e6a820f25a08fbf5c90235f64147f376c3ac20d23294b7ef9bc4444a62ffcce492a933ffbc3a01e071febca0b186d85fc5ddecb12a8d82baa27f68662eb8abb9dfb2fecfdfd9ba0cae29a802daef376692454b4a06e38c22e0c48e5b1d6f4aa711e0e6970b1af43a010bea1c61e063b87435ad1f3edde699a08842963fcb841578550e32fefa8ffcca04059aca83354fb55d2ad5d5a8489ded4abbcfaccca53fb9bb97e4fded2d335f8a0b03f22cc70bd7426013f5cf35b026485fa709a683081f9dc52003ad59c726cb9a0a4bd4eda750ea3580adc500b0996bcc985c5ecf17dfdc17c36e158f1e95b30c4a0610b8b9d66ce87033d8944772def343647b1e26a0000218510742fc12293ae4aa0be9ab12df54dc0d86941d64933570d00d97812b305e29335cfdda5f3cc45b468a009aacf1bededec82b242896736ede6b3e0777aee7856aac646669a00fce40bb7a015f08129d77b641610713ed5778f6ad9e33776051f330c7ce32c44cc05ae9791a06bf6a9af8f305b6aa938e77292682db9851f417bd27e289e7e1d48ec18d4ee7fa09566fdf01e3d13cba0e4213dc8a8e142dd3ad8e5ecefc608a69ed4a0ad7e1949a064ad837796c0ad1308a6220c476c189919f0ab07307c0b3dd4846bd6b92b874e80b90214f90211a0f4c80e30cffa643f03fe0a9e396d82b979ccb3e9ecd10fdd9c46e1781c5de27ba0dbf91d843cda372cf2d1477799d5ad86b9638af60101c7aff20a1e3b5cf3a74fa0f1c820b15af95778f7ff2788c4eb413520b70f4485ffcdd524d2d18e9af0acdba03f2f0cc3a32df9024a427072f0cc39a9ac4d627c302a62bec523e2de869f609fa0056b59f55c8a961da2d856aacc4347b4aa13ce73c3b5d65c1f94cc47691877ffa0491eea07441a287f67bad41899002481cbc386502f0df1bfb97fd9dca718ecb3a09e990cab9942178c40afbb25e24c42feff606d9e29f632a8a287a17f8aced5aba03df04f1c20af30e419bb8df786ac9100f98abe356f0ccd85544e340742c0c964a0c1f5dc6843bd0c9d6cb3a9074e5f2379f31e6e52ce9455bd8a12d7673a2daa49a052e794bc8f92fd6c314ec389d8f76db4cac37a35466e4a3f5c7b83050e43ac6ea0fbf2cdcaa64f7562c204bf69aec9a8ac1c98a7cf13aca2835b1fb5bdbceae181a0368ad74b1bdda0383fde0e6a3dbe43eba7bfb65775171ebba82f99f11b7b97dba03684440bf69db5db73ccf062d397c38865b6cb2508e434184f82a949f98a4eada0faaf337c1afc5d18bbdd438b222aa107a30c1d0da959e3c619029760394d3f78a02faca1ad5ac67ea5669796dd85dff56d25389feb833978cb894ce872853adc06a048b3f0cdc103145e0a40037f145b96912d550aa1a9f9db5d459523b05aaf933b80b8b3f8b180a0de0b1f73298a2a281343d9cfa344f10ab7098aa3bd015251fc291a798d916a7aa05820cb1578f7f67eb5efcff6b88007005728d09c795f866d7631fb0e2ff272d780a0135750570259d0d527d0b6b54ad2920bdfa7e5e6e3605ebd77c517f7596064bc80a030ba8d07fae25ac44e1a785f75c73bbac11a6000ca6a16cddaf0e306ab997d7280808080808080a09828653433ecfe102773d54c4f129ba9559a3f9aaf8d4eaf4b6380dc32ce76e48080b889f8879e2064fc829e0d9d5c7a5a1f045e8c40008aeba711cf1ec1d1d2b2819baf04b866f864228084201589978416376c1a80940000000000000000000000000000000000000000a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a0c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470";

        nodes.push(
            PackedTrieNode(
                uint256(uint160(0x7eB0c393793A4c6B4c2d35e03d561feaA840046F)),
                uint256(uint160(0x0)),
                uint256(0x800000000000000000000000000000000000000000000000000000000000005b)
            )
        );

        nodes.push(
            PackedTrieNode(
                uint256(uint160(0xeCbA657415fc8375876A0A0662A77ac69a1E99C8)),
                uint256(uint160(0xfCcaA7Ac1C63F756349d9A258E20fBaED3bB36DD)),
                uint256(0x0)
            )
        );

        nodes.push(
            PackedTrieNode(
                uint256(uint160(0x0e1B06406c5dc2CB643830FEd317ffB00E562940)),
                uint256(uint160(0x483a9E69012312513328992D454290BE85E95101)),
                uint256(0x800000000000000000000000000000000000000000000000000000000000009f)
            )
        );

        VotingTrieParameters memory votingTrieParameters = VotingTrieParameters({
            accountProof: accountProof,
            account: voter,
            committmentHasDelegated: false,
            committmentVotingPower: delegatedVotingPower,
            nodes: nodes
        });
        bytes memory userParams = abi.encode(votingTrieParameters);

        uint256 votingPowerResult = apeGasVotingStrategy.getVotingPower(l1BlockNumber, voter, params, userParams);

        assertEq(votingPowerResult, expectedVotingPower);
    }
}
